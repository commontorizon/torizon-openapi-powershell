#
# Torizon OTA
#  This API is rate limited and will return the following headers for each API call.    - X-RateLimit-Limit - The total number of requests allowed within a time period   - X-RateLimit-Remaining - The total number of requests still allowed until the end of the rate limiting period   - X-RateLimit-Reset - The number of seconds until the limit is fully reset  In addition, if an API client is rate limited, it will receive a HTTP 420 response with the following header:     - Retry-After - The number of seconds to wait until this request is allowed  
# Version: 2.0-Beta
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER RemoteUri
No description available.
.PARAMETER FriendlyName
No description available.
.PARAMETER LastFetched
No description available.
.OUTPUTS

DelegationInfo<PSCustomObject>
#>

function Initialize-TorizonPlatformAPIDelegationInfo {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${RemoteUri},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${FriendlyName},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${LastFetched}
    )

    Process {
        'Creating PSCustomObject: TorizonPlatformAPI => TorizonPlatformAPIDelegationInfo' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "remoteUri" = ${RemoteUri}
            "friendlyName" = ${FriendlyName}
            "lastFetched" = ${LastFetched}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to DelegationInfo<PSCustomObject>

.DESCRIPTION

Convert from JSON to DelegationInfo<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

DelegationInfo<PSCustomObject>
#>
function ConvertFrom-TorizonPlatformAPIJsonToDelegationInfo {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: TorizonPlatformAPI => TorizonPlatformAPIDelegationInfo' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in TorizonPlatformAPIDelegationInfo
        $AllProperties = ("remoteUri", "friendlyName", "lastFetched")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "remoteUri"))) { #optional property not found
            $RemoteUri = $null
        } else {
            $RemoteUri = $JsonParameters.PSobject.Properties["remoteUri"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "friendlyName"))) { #optional property not found
            $FriendlyName = $null
        } else {
            $FriendlyName = $JsonParameters.PSobject.Properties["friendlyName"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "lastFetched"))) { #optional property not found
            $LastFetched = $null
        } else {
            $LastFetched = $JsonParameters.PSobject.Properties["lastFetched"].value
        }

        $PSO = [PSCustomObject]@{
            "remoteUri" = ${RemoteUri}
            "friendlyName" = ${FriendlyName}
            "lastFetched" = ${LastFetched}
        }

        return $PSO
    }

}

